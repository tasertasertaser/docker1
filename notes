If using Sublimetext, consider installing Dockerfile Syntax Highlighting

----------------------
GENERALLY USEFUL STUFF
----------------------

To pick up where you left off : docker-machine ls (list machines)
                              : docker-machine restart Char (restarts the Char machine)
                              : re-run eval$(docker-machine env Char) to run docker commands inside that machine

To get into a running container : docker exec -it containername bash

To set memory when you spawn the machine use the --virtualbox-memory flag.
   :  1024 is the default.
   :  >  docker-machine create -d virtualbox --virtualbox-memory 2048 machine_name

QUITE IMPORTANT: Before launching a machine for the bonus part, run this
   command INSIDE the directory of the .yml file:
> export VIRTUALBOX_SHARE_FOLDER="$PWD:$PWD"
This fixes this problem: https://github.com/testdrivenio/testdriven-app-2.2/issues/15 

------
PART 1
------

01 : use --driver to use the virtualbox driver

03 : this is the thing that connects your shell to the VM.
     it's pretty annoying to do every time,
     so I use this bash function to shorten it to just "DMenv <machine name>"
         DMenv(){
          eval $(docker-machine env $1)
         }

05 : despite saying it "runs a command" inside a new container, the 
      run command actually launches a new container (whereas 
      "start" does not). "launch" is not a command.

06 : visit http://<ip of Char>:5000 in browser to verify it works
   : -d runs container in background
   : -p publishes container's ports to host

07 : can also use with container ID

09 : to test:
   : printf "#include <unistd.h> \n int main(void){ write(1, \"A\", 1); return(0);}" > test.c
   : build-essential installs GNU GCC compiler & dev environment
   : more info at https://bit.ly/2sndxXr
   : -y flag automatically agrees to prompt
   : to view installed packages: apt list --installed

12 : -e sets an environment variable (here, MYSQL_ROOT_PASSWORD) 
   : --restart=always means the container can restart on its own

14 : --link <container-name> allows this container to use that as a database
   : don't forget -p!

19 : install Flask with pip install Flask (if in background, use docker exec Abathur [...])
   : I really tried to echo this bullshit into the file without Vimming it open but line 3 wasn't having it

20 : use --advertise-addr to specify the address advertised to other members of the swarm, for API access & networking

22 : "docker node ls" lists all nodes in swarm; wish it said "worker" for workers but it's just blank
   : unclear why these are all joined to port 2377 but everyone did that so I did too

23 : -d [arg] to set the driver to manage the network; here, overlay

27 : Not sure how to isolate to only 1 task
   : also, do we want the -f flag for live update?

30 : In what way are the task logs fun?

34 : -y option passes the "yes" without having to be asked

------
PART 2
------

00 : Be sure to run with -i to keep stdin open -- otherwise Vim starts but is broken
   : Still unsure why -t is necessary

01 : https://www.hostinger.com/tutorials/how-to-make-a-teamspeak-3-server/
   : Use the Linux one, not the mac one... ewps
   : Testing process for this is annoying - requires download of teamspeak client & some configuring

02 : This is going to be stupid
   : https://blog.codeship.com/running-rails-development-environment-docker/
   : http://guides.rubyonrails.org/command_line.html#rails-dbconsoles
   : https://bundler.io/v2.0/bundle_install.html
   : https://dev.to/neshaz/how-to-use-rake-db-commands-in-the-correct-way--50o2
   : sure was stupid

03 : HOOOO BOY

   : check vbrazhni's very good readme, it details a lot of snags you will run into
   : https://github.com/VBrazhnik/docker-1/wiki/Dockerfiles

   : This build takes a long time - somewhere in the range of 10-20 minutes.
   : Even after the build appears complete, Gitlab can take >10 minutes to
   :  start responding to browser queries.

   : Here are some ways to make it take less time.

   : Make sure you create a symbolic link/goinfre setup as it says in the PDF before doing this
   : This will make the build faster

   : Setting more RAM for the VM will make the build faster.
   :  To set memory when you spawn the machine use the --virtualbox-memory flag.
   :  1024 is the default.
   :  >  docker-machine create -d virtualbox --virtualbox-memory 2048 machine_name

   : You can also assign more virtual CPU cores to the docker machine. 
   :  >  docker-machine create -d virtualbox --virtualbox-cpu-count "2" machine_name

   : You can even change this after you have created the machine
   :  >  docker-machine stop machine_name
   :  >  VBoxManage modifyvm machine_name --cpus 2
   :  >  VBoxManage modifyvm machine_name --memory 4096
   :  >  docker-machine start machine_name

-----
BONUS
-----

BEFORE launching the machine for the bonus part, run this command INSIDE the folder of the .yml file:
> export VIRTUALBOX_SHARE_FOLDER="$PWD:$PWD"
This fixes this problem: https://github.com/testdrivenio/testdriven-app-2.2/issues/15

---------------
FURTHER READING
---------------

PWD - Play With Docker
https://training.play-with-docker.com/


